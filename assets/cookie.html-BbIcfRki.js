import{_ as n,c as a,a as e,o as t}from"./app-58ZWfUWR.js";const p={};function o(c,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="cookies" tabindex="-1"><a class="header-anchor" href="#cookies"><span>Cookies</span></a></h1><p>Volga provides full support for cookies through seamless integration with the <a href="https://crates.io/crates/cookie" target="_blank" rel="noopener noreferrer"><code>cookie</code></a> crate. This guide explains how to enable and use cookie functionality in your application, including basic usage, customization, and secure (signed and private) cookies.</p><h2 id="enabling-cookie-support" tabindex="-1"><a class="header-anchor" href="#enabling-cookie-support"><span>Enabling Cookie Support</span></a></h2><p>To use cookies in your app, you need to enable the appropriate feature flags in your <code>Cargo.toml</code>. If you&#39;re not using the <code>full</code> feature set, add the <code>cookie</code> feature manually:</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">volga</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.5.8&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;cookie&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Optional: explicitly depend on the cookie crate</span></span>
<span class="line"><span class="token key property">cookie</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.18.1&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For signed or private cookies, see the <a href="#signed--private-cookies">Signed &amp; Private Cookies</a> section.</p><h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage"><span>Basic Usage</span></a></h2><p>Here&#39;s how to create and read cookies:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">App</span><span class="token punctuation">,</span> <span class="token class-name">HttpResult</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token namespace">http<span class="token punctuation">::</span></span><span class="token class-name">Cookies</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token namespace">headers<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Header</span><span class="token punctuation">,</span> <span class="token class-name">Authorization</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token namespace">error<span class="token punctuation">::</span></span><span class="token class-name">Error</span><span class="token punctuation">,</span></span>
<span class="line">    status<span class="token punctuation">,</span> ok<span class="token punctuation">,</span> see_other</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span>cookies<span class="token punctuation">:</span> <span class="token class-name">Cookies</span><span class="token punctuation">,</span> auth<span class="token punctuation">:</span> <span class="token class-name">Header</span><span class="token operator">&lt;</span><span class="token class-name">Authorization</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token class-name">HttpResult</span><span class="token punctuation">,</span> <span class="token class-name">Cookies</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Error</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> session_id <span class="token operator">=</span> <span class="token function">authorize</span><span class="token punctuation">(</span>auth<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token macro property">see_other!</span><span class="token punctuation">(</span><span class="token string">&quot;/me&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cookies<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;session-id&quot;</span><span class="token punctuation">,</span> session_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">me</span><span class="token punctuation">(</span>cookies<span class="token punctuation">:</span> <span class="token class-name">Cookies</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">HttpResult</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;session-id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is_some</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token macro property">ok!</span><span class="token punctuation">(</span><span class="token string">&quot;Success&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token macro property">status!</span><span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">,</span> <span class="token string">&quot;Unauthorized&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">authorize</span><span class="token punctuation">(</span>auth<span class="token punctuation">:</span> <span class="token class-name">Header</span><span class="token operator">&lt;</span><span class="token class-name">Authorization</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Error</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Dummy implementation. Replace with your own logic.</span></span>
<span class="line">    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token string">&quot;generated-session-id&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_post</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> login<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_get</span><span class="token punctuation">(</span><span class="token string">&quot;/me&quot;</span><span class="token punctuation">,</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes:</span></a></h3><ul><li>The <a href="https://docs.rs/volga/latest/volga/http/cookie/struct.Cookies.html" target="_blank" rel="noopener noreferrer"><code>Cookies</code></a> extractor handles reading from <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Cookie" target="_blank" rel="noopener noreferrer"><code>Cookie</code></a> headers and automatically sets <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Set-Cookie" target="_blank" rel="noopener noreferrer"><code>Set-Cookie</code></a> headers for responses.</li><li>You can chain multiple cookie additions using <a href="https://docs.rs/volga/latest/volga/http/cookie/struct.Cookies.html#method.add" target="_blank" rel="noopener noreferrer"><code>.add(...)</code></a>.</li></ul><h2 id="creating-secure-cookies" tabindex="-1"><a class="header-anchor" href="#creating-secure-cookies"><span>Creating Secure Cookies</span></a></h2><p>For secure or customized cookies (e.g., <code>HttpOnly</code>, <code>Secure</code>, custom domain/path), use the <a href="https://docs.rs/cookie/latest/cookie/struct.CookieBuilder.html" target="_blank" rel="noopener noreferrer"><code>CookieBuilder</code></a>:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">cookie<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Cookie</span><span class="token punctuation">,</span> <span class="token namespace">time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> cookie <span class="token operator">=</span> <span class="token class-name">Cookie</span><span class="token punctuation">::</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;session-id&quot;</span><span class="token punctuation">,</span> session_id<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">domain</span><span class="token punctuation">(</span><span class="token string">&quot;www.example.org&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">secure</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">http_only</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">max_age</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">days</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">cookies<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Tips</p><p><a href="https://docs.rs/cookie/latest/cookie/struct.Cookie.html#method.build" target="_blank" rel="noopener noreferrer"><code>Cookie::build(...)</code></a> takes either a name/value tuple or just a name, depending on your needs.</p></div><h2 id="reading-cookies" tabindex="-1"><a class="header-anchor" href="#reading-cookies"><span>Reading Cookies</span></a></h2><p>To access a cookie by name:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span> <span class="token operator">=</span> cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;session-id&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Session ID: {}&quot;</span><span class="token punctuation">,</span> cookie<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="signed-private-cookies" tabindex="-1"><a class="header-anchor" href="#signed-private-cookies"><span>Signed &amp; Private Cookies</span></a></h2><p>To protect cookie integrity or privacy, Volga supports two secure cookie modes:</p><table><thead><tr><th>Type</th><th>Use Case</th><th>Crate Feature</th><th>API</th></tr></thead><tbody><tr><td><strong>Signed</strong></td><td>Detect tampering (readable)</td><td><code>signed-cookie</code></td><td><a href="https://docs.rs/volga/latest/volga/http/cookie/signed/struct.SignedCookies.html" target="_blank" rel="noopener noreferrer"><code>SignedCookies</code></a></td></tr><tr><td><strong>Private</strong></td><td>Tamper-proof and encrypted (hidden)</td><td><code>private-cookie</code></td><td><a href="https://docs.rs/volga/latest/volga/http/cookie/private/struct.PrivateCookies.html" target="_blank" rel="noopener noreferrer"><code>PrivateCookies</code></a></td></tr></tbody></table><h3 id="enable-secure-cookie-support" tabindex="-1"><a class="header-anchor" href="#enable-secure-cookie-support"><span>Enable Secure Cookie Support</span></a></h3><p>Update your <code>Cargo.toml</code> to include the desired feature and the DI system (<code>di</code>):</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token comment"># For signed cookies</span></span>
<span class="line"><span class="token key property">volga</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.5.8&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;signed-cookie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;di&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># For private cookies</span></span>
<span class="line"><span class="token key property">volga</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.5.8&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;private-cookie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;di&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># For all cookies features</span></span>
<span class="line"><span class="token key property">volga</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.5.8&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;cookie-full&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;di&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="register-secret-keys" tabindex="-1"><a class="header-anchor" href="#register-secret-keys"><span>Register Secret Keys</span></a></h3><p>Signed and private cookies require secret keys, provided via DI:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span>http<span class="token punctuation">::</span></span><span class="token class-name">SignedKey</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">add_singleton</span><span class="token punctuation">(</span><span class="token class-name">SignedKey</span><span class="token punctuation">::</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// or use your own key</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Alternatively, for private cookies:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span>http<span class="token punctuation">::</span></span><span class="token class-name">PrivateKey</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">add_singleton</span><span class="token punctuation">(</span><span class="token class-name">PrivateKey</span><span class="token punctuation">::</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// or use your own key</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once registered, you can extract <a href="https://docs.rs/volga/latest/volga/http/cookie/signed/struct.SignedCookies.html" target="_blank" rel="noopener noreferrer"><code>SignedCookies</code></a> or <a href="https://docs.rs/volga/latest/volga/http/cookie/private/struct.PrivateCookies.html" target="_blank" rel="noopener noreferrer"><code>PrivateCookies</code></a> just like <a href="https://docs.rs/volga/latest/volga/http/cookie/struct.Cookies.html" target="_blank" rel="noopener noreferrer"><code>Cookies</code></a>.</p><h2 id="best-practices" tabindex="-1"><a class="header-anchor" href="#best-practices"><span>Best Practices</span></a></h2><ul><li><strong>Use <code>HttpOnly</code> and <code>Secure</code> flags</strong> for session or authentication cookies to prevent XSS and eavesdropping.</li><li><strong>Set a <code>SameSite</code> policy</strong> (via <code>cookie::CookieBuilder</code>) for cross-site protection.</li><li><strong>Rotate signing/encryption keys</strong> periodically if you use <code>SignedCookies</code> or <code>PrivateCookies</code>.</li><li><strong>Avoid storing sensitive data</strong> directly in cookies unless encrypted via private cookies.</li></ul><h2 id="additional-examples" tabindex="-1"><a class="header-anchor" href="#additional-examples"><span>Additional Examples</span></a></h2><ul><li><a href="https://github.com/RomanEmreis/volga/blob/main/examples/cookies/src/main.rs" target="_blank" rel="noopener noreferrer">Basic Cookies</a></li><li><a href="https://github.com/RomanEmreis/volga/blob/main/examples/signed_cookies/src/main.rs" target="_blank" rel="noopener noreferrer">Signed Cookies</a></li><li><a href="https://github.com/RomanEmreis/volga/blob/main/examples/private_cookies/src/main.rs" target="_blank" rel="noopener noreferrer">Private Cookies</a></li></ul>`,34)]))}const l=n(p,[["render",o]]),u=JSON.parse('{"path":"/advanced/cookie.html","title":"Cookies","lang":"en-US","frontmatter":{},"git":{"updatedTime":1753605804000,"contributors":[{"name":"Roman Emreis","username":"","email":"Roman_Emreis@epam.com","commits":2}],"changelog":[{"hash":"446f2cb336c3db45ba44b4f07f646b570e054215","time":1753605804000,"email":"r.emreis@outlook.com","author":"Roman Emreis","message":"new release"},{"hash":"eb199fedf1f7ed09919d9d8c68ce4668da246571","time":1747325626000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"}]},"filePathRelative":"advanced/cookie.md"}');export{l as comp,u as data};
