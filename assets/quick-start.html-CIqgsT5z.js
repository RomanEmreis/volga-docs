import{_ as s,c as n,a as e,o as t}from"./app-58ZWfUWR.js";const p={};function o(l,a){return t(),n("div",null,a[0]||(a[0]=[e(`<h1 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start"><span>Quick Start</span></a></h1><p>Build a basic &quot;Hello, World&quot; Web API using Volga.</p><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h2><h3 id="install-rust" tabindex="-1"><a class="header-anchor" href="#install-rust"><span>Install Rust</span></a></h3><p>If you haven&#39;t installed Rust yet, it is recommended to use the <code>rustup</code>. <a href="https://doc.rust-lang.org/book/ch01-01-installation.html" target="_blank" rel="noopener noreferrer">Here</a> is the official guide where you can find how to do it.</p><p>Volga currently has a minimum supported Rust version (MSRV) of 1.80. Running <code>rustup update</code> will ensure you have the latest Rust version available.</p><h3 id="create-an-app" tabindex="-1"><a class="header-anchor" href="#create-an-app"><span>Create an app</span></a></h3><p>Create a new binary-based app:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">cargo</span> new hello-world</span>
<span class="line"><span class="token builtin class-name">cd</span> hello-world</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Add the following dependencies in your <code>Cargo.toml</code>:</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">volga</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.6.3&quot;</span></span>
<span class="line"><span class="token key property">tokio</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;full&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="setup" tabindex="-1"><a class="header-anchor" href="#setup"><span>Setup</span></a></h2><p>Create your main application in <code>main.rs</code>:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">App</span><span class="token punctuation">,</span> ok<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Configure the server</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Example of a simple GET request handler</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_get</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token macro property">ok!</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// Run the server</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="detailed-walkthrough" tabindex="-1"><a class="header-anchor" href="#detailed-walkthrough"><span>Detailed Walkthrough</span></a></h2><p>When the <a href="https://docs.rs/volga/latest/volga/app/struct.App.html" target="_blank" rel="noopener noreferrer"><code>App</code></a> struct is instantiated, it represents your API and by default binds it to <code>http://localhost:7878</code>:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Or if you need to bind it to another socket, you can use the <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.bind" target="_blank" rel="noopener noreferrer"><code>bind()</code></a> method like this:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token comment">// Binds the server to http://localhost:5000</span></span>
<span class="line"><span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:5000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, map a specific handler to a route. For instance, mapping our handler to <code>GET /hello</code>:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line">app<span class="token punctuation">.</span><span class="token function">map_get</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token macro property">ok!</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ensure routes are mapped before you start the server with:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line">app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="testing-the-api" tabindex="-1"><a class="header-anchor" href="#testing-the-api"><span>Testing the API</span></a></h2><p>You can test your API using the <code>curl</code> command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token operator">&gt;</span> <span class="token function">curl</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;http://localhost:7878/hello&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Response expected:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">* Host localhost:7878 was resolved.</span>
<span class="line">* IPv6: ::1</span>
<span class="line">* IPv4: <span class="token number">127.0</span>.0.1</span>
<span class="line">*   Trying <span class="token punctuation">[</span>::1<span class="token punctuation">]</span>:7878<span class="token punctuation">..</span>.</span>
<span class="line">* Connected to localhost <span class="token punctuation">(</span>::1<span class="token punctuation">)</span> port <span class="token number">7878</span></span>
<span class="line"><span class="token operator">&gt;</span> GET /hello HTTP/1.1</span>
<span class="line"><span class="token operator">&gt;</span> Host: localhost:7878</span>
<span class="line"><span class="token operator">&gt;</span> User-Agent: curl/8.9.1</span>
<span class="line"><span class="token operator">&gt;</span> Accept: */*</span>
<span class="line"><span class="token operator">&gt;</span></span>
<span class="line">* Request completely sent off</span>
<span class="line"><span class="token operator">&lt;</span> HTTP/1.1 <span class="token number">200</span> OK</span>
<span class="line"><span class="token operator">&lt;</span> date: Sun, <span class="token number">6</span> Oct <span class="token number">2024</span> 08:22:17 +0000</span>
<span class="line"><span class="token operator">&lt;</span> server: Volga</span>
<span class="line"><span class="token operator">&lt;</span> content-length: <span class="token number">12</span></span>
<span class="line"><span class="token operator">&lt;</span> content-type: text/plain</span>
<span class="line"><span class="token operator">&lt;</span></span>
<span class="line">* Connection <span class="token comment">#0 to host localhost left intact</span></span>
<span class="line">Hello, World<span class="token operator">!</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="blocking-example" tabindex="-1"><a class="header-anchor" href="#blocking-example"><span>Blocking Example</span></a></h3><p>Volga also supports building a Web API without explicitly depending on <code>tokio</code>, using the <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.run_blocking" target="_blank" rel="noopener noreferrer"><code>run_blocking()</code></a> method.</p><p>This allows you to simplify your <code>Cargo.toml</code> dependencies:</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">volga</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.6.3&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Your <code>main.rs</code> might then look like this:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">App</span><span class="token punctuation">,</span> ok<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Create the application</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Define a simple GET handler</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_get</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token macro property">ok!</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Run the server in blocking mode</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run_blocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Although the <code>main</code> function appears synchronous, the server still runs asynchronously under the hood using the <code>tokio</code> runtime.</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>The <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.run_blocking" target="_blank" rel="noopener noreferrer"><code>run_blocking()</code></a> approach is suitable for quick prototyping, simple tools, or learning scenarios where you want to avoid dealing with async setup. However, using <code>#[tokio::main]</code> is generally recommended for <strong>production</strong> applications, as it gives you full control over the async runtime, allows more advanced configuration, and better supports integration with other async libraries and services.</p></div><p>You can also check out the full example <a href="https://github.com/RomanEmreis/volga/blob/main/examples/hello_world/src/main.rs" target="_blank" rel="noopener noreferrer">here</a></p>`,37)]))}const c=s(p,[["render",o]]),r=JSON.parse('{"path":"/basics/quick-start.html","title":"Quick Start","lang":"en-US","frontmatter":{},"git":{"updatedTime":1754483812000,"contributors":[{"name":"Roman Emreis","username":"","email":"r.emreis@outloo.com","commits":33},{"name":"RomanEmreis","username":"RomanEmreis","email":"39233213+RomanEmreis@users.noreply.github.com","commits":3,"url":"https://github.com/RomanEmreis"}],"changelog":[{"hash":"b171c253d6071cf479d4fc26ab4d9034eab14952","time":1754483812000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"e834cb9ecab2c5eaae50b2a1b42ef1e5cb437dc0","time":1753605981000,"email":"r.emreis@outlook.com","author":"Roman Emreis","message":"small updates"},{"hash":"446f2cb336c3db45ba44b4f07f646b570e054215","time":1753605804000,"email":"r.emreis@outlook.com","author":"Roman Emreis","message":"new release"},{"hash":"c8872282682c0253111255ea1f5546f8b6d372a5","time":1752418092000,"email":"r.emreis@outlook.com","author":"Roman Emreis","message":"new release"},{"hash":"eb199fedf1f7ed09919d9d8c68ce4668da246571","time":1747325626000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"be45b5b78d0d2925cbe8628c96fe06acf0d952b4","time":1744624313000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"a867fa2aa5f2803668e59034c5e3f7dfbf34caca","time":1742551187000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"719b6efa42303ef55a2a74dafe505a03fc71ac3e","time":1740081883000,"email":"39233213+RomanEmreis@users.noreply.github.com","author":"Roman","message":"new release"},{"hash":"7c086be3a38ed023582e6ce85f7b7ee41fb1f649","time":1739560954000,"email":"39233213+RomanEmreis@users.noreply.github.com","author":"Roman","message":"new release"},{"hash":"d7d673fca21757efa0a4659c63884168bfe315fe","time":1738859397000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"590c63e2d69004cdcaebbdeb6f7cabd584692c1e","time":1738600433000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"22335fb3609085607d6b4dfd02db24fa61db08e5","time":1737643784000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"some updates"},{"hash":"3678209d5aa638c7ad51e1e2e1da418c83f2f491","time":1737133994000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"5d6cdc2c818f56d2f0f360e08643446a9e8c2e1f","time":1736868027000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"0d9f0a6204ab28af39e532d3f5cf6497e518faf6","time":1736010460000,"email":"39233213+RomanEmreis@users.noreply.github.com","author":"Roman","message":"Update quick-start.md"},{"hash":"eb0ae263372a1c49c2c18ccfcff27ed476222528","time":1735387941000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"f0a26f29858451307785105c897483568f99fc00","time":1734955827000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"7bc27d7af6a3b3ba979653e271bc7eff4c42ca89","time":1734360674000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"b728e47449654a6e1994ac59540bda945dfe8db9","time":1733922899000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"c103c93458ddf9a62b8b085ade6d01e097179d4d","time":1733565170000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"several fixes"},{"hash":"a44e23ce545d4453147935818ef67beaf4a90531","time":1733501332000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new docs site"},{"hash":"f7b99f9f4d378ce79ae15accc2e14dd549cb8c6b","time":1732360723000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"e8d7559e6bc5c67b2e5f56a0fd27a6b9784391ee","time":1732113556000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"cc3d5a5b64e130f6529221219529324fed91160e","time":1731923958000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"c6a68d00de7c0a5d851f6d23397cea1ea5421bfe","time":1730631164000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"261e33888697e88fb1c089046a75c23d01cc5db5","time":1730539585000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"3990c8de3d3b7e50f710202586cadb9310cd233c","time":1730390213000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"e27f5659aac7bf7882d4989e95711db07c48c0dd","time":1730024932000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"small adjustments"},{"hash":"b480008a730d0424109908ff79bd425c5e2eae8f","time":1730024614000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"863a89757b0188101bfdebc23986985ed9305577","time":1729932080000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release + cancellation guide"},{"hash":"2ac28aff8d30819e38cc23f96a9d9ee4adaac2a0","time":1728814353000,"email":"r.emreis@outloo.com","author":"Roman Emreis","message":"new release"},{"hash":"6c9d33393fb02e45b8732a053720cc350af3d5d9","time":1728663592000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"45f9deb161a1b3c5463eea6d5928992edc71ea83","time":1728487648000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"d88f64de17f528fcb03958a76a8b8fb497e39522","time":1728379697000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"updated to new release"},{"hash":"02c0432aaa5f4058e596f75f2556e2ae47ceb0ad","time":1728292816000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"added headers and query params documentation"},{"hash":"574a918a67f81749754c3ab0905a174bf7f5e91a","time":1728205697000,"email":"r.emreis@outloo.com","author":"Roman Emreis","message":"Initial commit"}]},"filePathRelative":"basics/quick-start.md"}');export{c as comp,r as data};
