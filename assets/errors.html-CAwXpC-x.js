import{_ as s,c as a,a as t,o as p}from"./app-58ZWfUWR.js";const e={};function o(c,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="центральныи-обработчик-ошибок" tabindex="-1"><a class="header-anchor" href="#центральныи-обработчик-ошибок"><span>Центральный обработчик ошибок</span></a></h1><p>Волга предоставляет централизованный механизм обработки ошибок, который перехватывает всё ошибки, которые реализуют типаж <a href="https://doc.rust-lang.org/std/error/trait.Error.html" target="_blank" rel="noopener noreferrer"><code>Errors</code></a>, возникающие в обработчиках запросов и middleware. Для этого можно воспользоваться методом <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.map_err" target="_blank" rel="noopener noreferrer"><code>map_err</code></a> типа <a href="https://docs.rs/volga/latest/volga/app/struct.App.html" target="_blank" rel="noopener noreferrer"><code>App</code></a> для регистрации функции, обрабатывающей ошибки.</p><p>Функция принимает объект тип <a href="https://docs.rs/volga/latest/volga/error/struct.Error.html" target="_blank" rel="noopener noreferrer"><code>Error</code></a> и должна вернуть ответ, реализующий типаж <a href="https://docs.rs/volga/latest/volga/http/response/into_response/trait.IntoResponse.html" target="_blank" rel="noopener noreferrer"><code>IntoResponse</code></a>.</p><h3 id="пример" tabindex="-1"><a class="header-anchor" href="#пример"><span>Пример:</span></a></h3><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">App</span><span class="token punctuation">,</span> <span class="token namespace">error<span class="token punctuation">::</span></span><span class="token class-name">Error</span><span class="token punctuation">,</span> status<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_get</span><span class="token punctuation">(</span><span class="token string">&quot;/error&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">IoError</span><span class="token punctuation">::</span><span class="token function">other</span><span class="token punctuation">(</span><span class="token string">&quot;some error&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Регистрируем централизованный обработчик ошибок</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_err</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>error<span class="token punctuation">:</span> <span class="token class-name">Error</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token macro property">status!</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В этом примере мы намеренно создаем обработчик запросов, который выдает ошибку, и определяем обработчик ошибок, который генерирует HTTP-ответ с кодом состояния <code>500</code> на основе сообщения об ошибке.</p><p>Для удобства структура <a href="https://docs.rs/volga/latest/volga/error/struct.Error.html" target="_blank" rel="noopener noreferrer"><code>Error</code></a> уже включает поле <code>status</code>, которое охватывает общие случаи (400, 401, 403, 404 и т. д.), что позволяет использовать макрос следующим образом:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token macro property">status!</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>status<span class="token punctuation">.</span><span class="token function">as_u16</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Фактически, именно так реализован обработчик ошибок по-умолчанию. Если мы удалим метод <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.map_err" target="_blank" rel="noopener noreferrer"><code>map_err</code></a>, ответ останется неизменным. Однако переопределение пользовательского обработчика ошибок обеспечивает большую гибкость для логгирования и трассировки.</p><h2 id="problem-details" tabindex="-1"><a class="header-anchor" href="#problem-details"><span>Problem Details</span></a></h2><p>Волга полностью поддерживает формат <a href="https://www.rfc-editor.org/rfc/rfc9457" target="_blank" rel="noopener noreferrer">Problem Details</a>, который предоставляет машиночитаемые сведения об ошибках в ответах HTTP. Это устраняет необходимость определять пользовательские форматы ошибок для API.</p><p>Чтобы включить эту возможность, убедитесь, что функция <code>problem-details</code> активирована в <code>Cargo.toml</code> вашего приложения:</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">volga</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.5.0&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;problem-details&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Затем вы можете воспользоваться макросом <a href="https://docs.rs/volga/latest/volga/macro.problem.html" target="_blank" rel="noopener noreferrer"><code>problem!</code></a> в связке с <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.map_err" target="_blank" rel="noopener noreferrer"><code>map_err</code></a>:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">App</span><span class="token punctuation">,</span> <span class="token namespace">error<span class="token punctuation">::</span></span><span class="token class-name">Error</span><span class="token punctuation">,</span> problem<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_get</span><span class="token punctuation">(</span><span class="token string">&quot;/error&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">IoError</span><span class="token punctuation">::</span><span class="token function">other</span><span class="token punctuation">(</span><span class="token string">&quot;some error&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Регистрируем централизованный обработчик ошибок</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_err</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>error<span class="token punctuation">:</span> <span class="token class-name">Error</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> <span class="token punctuation">(</span>status<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token operator">=</span> error<span class="token punctuation">.</span><span class="token function">into_parts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token macro property">problem!</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> status<span class="token punctuation">.</span><span class="token function">as_u16</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;detail&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;instance&quot;</span><span class="token punctuation">:</span> instance</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="пример-ответа" tabindex="-1"><a class="header-anchor" href="#пример-ответа"><span>Пример ответа:</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line">HTTP/<span class="token number">1.1</span> <span class="token number">500</span> Internal Server Error</span>
<span class="line">Content-Type<span class="token operator">:</span> application/problem+json</span>
<span class="line"></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://tools.ietf.org/html/rfc9110#section-15.6.1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Internal Server Error&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token string">&quot;some error&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;instance&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/error&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Значения полей <code>type</code> и <code>title</code> вычисляются автоматически на основе статус код, однако их можно переопределить:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token macro property">problem!</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;https://tools.ietf.org/html/rfc9110#section-15.6.1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Server Error&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> status<span class="token punctuation">.</span><span class="token function">as_u16</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;detail&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;instance&quot;</span><span class="token punctuation">:</span> instance</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Кроме того, при необходимости вы можете добавить в тело ответа любую дополнительную информацию:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token macro property">problem!</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;https://tools.ietf.org/html/rfc9110#section-15.5.1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Bad Request&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;details&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Your request parameters didn&#39;t validate.&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;instance&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;/some/resource/path&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;invalid-params&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;reason&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Must be a positive integer&quot;</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Итоговый пример вы можете найти <a href="https://github.com/RomanEmreis/volga/blob/main/examples/global_error_handler/src/main.rs" target="_blank" rel="noopener noreferrer">здесь</a>.</p>`,22)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/ru/advanced/errors.html","title":"Центральный обработчик ошибок","lang":"ru-RU","frontmatter":{},"git":{"updatedTime":1753605804000,"contributors":[{"name":"Roman Emreis","username":"","email":"Roman_Emreis@epam.com","commits":3}],"changelog":[{"hash":"446f2cb336c3db45ba44b4f07f646b570e054215","time":1753605804000,"email":"r.emreis@outlook.com","author":"Roman Emreis","message":"new release"},{"hash":"d7d673fca21757efa0a4659c63884168bfe315fe","time":1738859397000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"590c63e2d69004cdcaebbdeb6f7cabd584692c1e","time":1738600433000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"}]},"filePathRelative":"ru/advanced/errors.md"}');export{i as comp,u as data};
