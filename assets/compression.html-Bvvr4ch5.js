import{_ as s,c as a,a as e,o as p}from"./app-58ZWfUWR.js";const t={};function l(o,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="сжатие-ответов" tabindex="-1"><a class="header-anchor" href="#сжатие-ответов"><span>Сжатие ответов</span></a></h1><p>Волга предоставляет middleware, которое сжимает тела ответов HTTP на основе заголовка <code>Accept-Encoding</code>. В настоящее время поддерживается четыре алгоритма сжатия: <a href="https://ru.wikipedia.org/wiki/Brotli" target="_blank" rel="noopener noreferrer">Brotli</a>, <a href="https://ru.wikipedia.org/wiki/Gzip" target="_blank" rel="noopener noreferrer">Gzip</a>, <a href="https://ru.wikipedia.org/wiki/Deflate" target="_blank" rel="noopener noreferrer">Deflate</a> и <a href="https://ru.wikipedia.org/wiki/Zstandard" target="_blank" rel="noopener noreferrer">Zstandard</a>.</p><h2 id="включение-сжатия" tabindex="-1"><a class="header-anchor" href="#включение-сжатия"><span>Включение сжатия</span></a></h2><p>Чтобы включить сжатие ответов, убедитесь, что вы включили необходимую функцию в <code>Cargo.toml</code>. Если вы не используете набор функций <code>full</code>, вы можете отдельно подключить функцию <code>compression-full</code> делающую доступными все алгоритмы сжатия:</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">volga</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.4.6&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;compression-full&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Если вам нужны определенные алгоритмы сжатия, вы можете указать их явно:</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">volga</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.4.6&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;compression-brotli&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;compression-gzip&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="пример-использования" tabindex="-1"><a class="header-anchor" href="#пример-использования"><span>Пример использования</span></a></h2><p>Чтобы использовать сжатие в вашем приложении, используйте метод <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.use_compression" target="_blank" rel="noopener noreferrer"><code>use_compression()</code></a> в вашем <code>main.rs</code>:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">App</span><span class="token punctuation">,</span> ok<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token namespace">serde<span class="token punctuation">::</span></span><span class="token class-name">Serialize</span><span class="token punctuation">;</span></span>
<span class="line"> </span>
<span class="line"><span class="token attribute attr-name">#[derive(Serialize)]</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token type-definition class-name">User</span> <span class="token punctuation">{</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token keyword">i32</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Подключает middleware сжимающий ответы</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">use_compression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_get</span><span class="token punctuation">(</span><span class="token string">&quot;/users&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> <span class="token keyword">mut</span> values <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span><span class="token number">10000</span> <span class="token punctuation">{</span></span>
<span class="line">            values<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">User</span> <span class="token punctuation">{</span> </span>
<span class="line">                age<span class="token punctuation">:</span> i<span class="token punctuation">,</span> </span>
<span class="line">                name<span class="token punctuation">:</span> i<span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token macro property">ok!</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Затем вы можете протестировать это с помощью команды <code>curl</code>:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token operator">&gt;</span> <span class="token function">curl</span> <span class="token parameter variable">-v</span> <span class="token parameter variable">--location</span> <span class="token string">&quot;http://127.0.0.1:7878/users&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">      <span class="token parameter variable">-H</span> <span class="token string">&quot;Accept-Encoding: br&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">      <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">*   Trying <span class="token number">127.0</span>.0.1:7878<span class="token punctuation">..</span>.</span>
<span class="line">* Connected to <span class="token number">127.0</span>.0.1 <span class="token punctuation">(</span><span class="token number">127.0</span>.0.1<span class="token punctuation">)</span> port <span class="token number">7878</span></span>
<span class="line"><span class="token operator">&gt;</span> GET /hello HTTP/1.1</span>
<span class="line"><span class="token operator">&gt;</span> Host: <span class="token number">127.0</span>.0.1:7878</span>
<span class="line"><span class="token operator">&gt;</span> User-Agent: curl/8.9.1</span>
<span class="line"><span class="token operator">&gt;</span> Accept: */*</span>
<span class="line"><span class="token operator">&gt;</span> Accept-Encoding: br</span>
<span class="line"><span class="token operator">&gt;</span> Content-Type: application/json</span>
<span class="line"><span class="token operator">&gt;</span></span>
<span class="line">* Request completely sent off</span>
<span class="line"><span class="token operator">&lt;</span> HTTP/1.1 <span class="token number">200</span> OK</span>
<span class="line"><span class="token operator">&lt;</span> server: Volga</span>
<span class="line"><span class="token operator">&lt;</span> content-type: application/json</span>
<span class="line"><span class="token operator">&lt;</span> vary: accept-encoding</span>
<span class="line"><span class="token operator">&lt;</span> content-encoding: br</span>
<span class="line"><span class="token operator">&lt;</span> transfer-encoding: chunked</span>
<span class="line"><span class="token operator">&lt;</span> date: Fri, <span class="token number">10</span> Jan <span class="token number">2025</span> <span class="token number">14</span>:14:37 GMT</span>
<span class="line"><span class="token operator">&lt;</span></span>
<span class="line"><span class="token punctuation">..</span>.binary data</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="принцип-работы" tabindex="-1"><a class="header-anchor" href="#принцип-работы"><span>Принцип работы</span></a></h2><p>При получении запроса middleware сжатия проверяет HTTP-заголовок <code>Accept-Encoding</code>, чтобы определить подходящий алгоритм сжатия, учитывая, при этом, доступность требуемой функции и q-value (q-factor), если предоставлено несколько вариантов. Затем middleware сжимает тело ответа с помощью выбранного алгоритма и устанавливает HTTP-заголовок <code>Content-Encoding</code> соответствующим образом.</p><p>Если заголовок <code>Accept-Encoding</code> указывает неподдерживаемый сервером алгоритм, то middleware отвечает кодом состояния <a href="https://developer.mozilla.org/ru/docs/Web/HTTP/Status/406" target="_blank" rel="noopener noreferrer"><code>406 Not Acceptable</code></a>.</p><p>Полный пример можно посмотреть <a href="https://github.com/RomanEmreis/volga/blob/main/examples/compression/src/main.rs" target="_blank" rel="noopener noreferrer">здесь</a></p>`,17)]))}const i=s(t,[["render",l]]),r=JSON.parse('{"path":"/ru/advanced/compression.html","title":"Сжатие ответов","lang":"ru-RU","frontmatter":{},"git":{"updatedTime":1753605804000,"contributors":[{"name":"Roman Emreis","username":"","email":"Roman_Emreis@epam.com","commits":4}],"changelog":[{"hash":"446f2cb336c3db45ba44b4f07f646b570e054215","time":1753605804000,"email":"r.emreis@outlook.com","author":"Roman Emreis","message":"new release"},{"hash":"d7d673fca21757efa0a4659c63884168bfe315fe","time":1738859397000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"5d6cdc2c818f56d2f0f360e08643446a9e8c2e1f","time":1736868027000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"4f7f9ff06d3bde58f86db888ba4137ed278316d4","time":1736519946000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"}]},"filePathRelative":"ru/advanced/compression.md"}');export{i as comp,r as data};
