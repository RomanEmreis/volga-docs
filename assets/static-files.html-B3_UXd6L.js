import{_ as s,c as a,a as p,o as t}from"./app-58ZWfUWR.js";const e={};function c(l,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="статические-фаилы" tabindex="-1"><a class="header-anchor" href="#статические-фаилы"><span>Статические файлы</span></a></h1><p>Волга поддерживает работу со статическими файлами с возможностью просмотра каталогов, настраиваемым именем индексного файла, префиксами путей, корневой папкой контента и специальным файлом для обработки неизвестных маршрутов.</p><h2 id="подготовка" tabindex="-1"><a class="header-anchor" href="#подготовка"><span>Подготовка</span></a></h2><h3 id="зависимости" tabindex="-1"><a class="header-anchor" href="#зависимости"><span>Зависимости</span></a></h3><p>Если вы не используете полный набор возможностей (<code>full</code>), вам необходимо включить <code>static-files</code> в <code>Cargo.toml</code>:</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml"><pre><code class="language-toml"><span class="line"><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">volga</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.5.2&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;static-files&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="структура-папок" tabindex="-1"><a class="header-anchor" href="#структура-папок"><span>Структура папок</span></a></h3><p>Предположим, у нас есть следующая структура проекта:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">project/</span>
<span class="line">│── static/</span>
<span class="line">│   ├── index.html</span>
<span class="line">│   ├── style.css</span>
<span class="line">│   ├── script.js</span>
<span class="line">│── src/</span>
<span class="line">│   ├── main.rs</span>
<span class="line">│── Cargo.toml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="базовыи-сервер-статических-фаилов" tabindex="-1"><a class="header-anchor" href="#базовыи-сервер-статических-фаилов"><span>Базовый сервер статических файлов</span></a></h2><p>После создания файлов HTML, CSS и JS можно настроить минимальный сервер в <code>main.rs</code>:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token class-name">App</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">with_host_env</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>env<span class="token closure-punctuation punctuation">|</span></span> env<span class="token punctuation">.</span><span class="token function">with_content_root</span><span class="token punctuation">(</span><span class="token string">&quot;/static&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Включает маршрутизацию статических файлов</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_static_assets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>По умолчанию корневая папка — это корень проекта (<code>project/</code>). Вызов <a href="https://docs.rs/volga/latest/volga/app/env/struct.HostEnv.html#method.with_content_root" target="_blank" rel="noopener noreferrer"><code>with_content_root(&quot;/static&quot;)</code></a> изменяет её на <code>project/static/</code>.</p><p>Затем вызов <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.map_static_assets" target="_blank" rel="noopener noreferrer"><code>map_static_assets()</code></a> автоматически добавляет маршруты <code>GET</code> и <code>HEAD</code>:</p><ul><li><code>/</code> → <code>/index.html</code></li><li><code>/{path}</code> → <code>/любой_файл_или_папка_в_корне</code></li></ul><p>Если в корневой папке есть подпапки, они также будут обработаны.</p><h2 id="фаил-по-умолчанию" tabindex="-1"><a class="header-anchor" href="#фаил-по-умолчанию"><span>Файл по умолчанию</span></a></h2><p>Чтобы раздавать специальный файл (например, <code>404.html</code>) при неизвестных маршрутах, используйте <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.map_fallback_to_file" target="_blank" rel="noopener noreferrer"><code>map_fallback_to_file()</code></a>, внутри он использует другой метод - <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.map_fallback" target="_blank" rel="noopener noreferrer"><code>map_fallback()</code></a> который, в свою очередь, настраивает специальный обработчик, вызываемый при обнаружении неизвестного маршрута:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token class-name">App</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">with_host_env</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>env<span class="token closure-punctuation punctuation">|</span></span> env</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">with_content_root</span><span class="token punctuation">(</span><span class="token string">&quot;/static&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">with_fallback_file</span><span class="token punctuation">(</span><span class="token string">&quot;404.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Включает маршрутизацию статических файлов</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_static_assets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Включает перенаправление на 404.html</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_fallback_to_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Поскольку такие специальные резервные файлы отключены по умолчанию, мы явно задаем файл <code>404.html</code> с помощью метода <a href="https://docs.rs/volga/latest/volga/app/env/struct.HostEnv.html#method.with_fallback_file" target="_blank" rel="noopener noreferrer"><code>with_fallback_file(&quot;404.html&quot;)</code></a>.</p><p>Для упрощения можно использовать <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.use_static_files" target="_blank" rel="noopener noreferrer"><code>use_static_files()</code></a>, который объединяет <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.map_static_assets" target="_blank" rel="noopener noreferrer"><code>map_static_assets()</code></a> и <a href="https://docs.rs/volga/latest/volga/app/struct.App.html#method.map_fallback_to_file" target="_blank" rel="noopener noreferrer"><code>map_fallback_to_file()</code></a>, Однако, последний метод будет задействован, только если указан специальный резервный файл:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token class-name">App</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">with_host_env</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>env<span class="token closure-punctuation punctuation">|</span></span> env</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">with_content_root</span><span class="token punctuation">(</span><span class="token string">&quot;/static&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">with_fallback_file</span><span class="token punctuation">(</span><span class="token string">&quot;404.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Включает маршрутизацию статических файлов</span></span>
<span class="line">    <span class="token comment">// и перенаправление на 404.html</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">use_static_files</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Совет</p><p>Можно установить <a href="https://docs.rs/volga/latest/volga/app/env/struct.HostEnv.html#method.with_fallback_file" target="_blank" rel="noopener noreferrer"><code>with_fallback_file(&quot;index.html&quot;)</code></a>, чтобы перенаправлять неизвестные маршруты на главную страницу.</p></div><h2 id="просмотр-каталогов" tabindex="-1"><a class="header-anchor" href="#просмотр-каталогов"><span>Просмотр каталогов</span></a></h2><p>По умолчанию просмотр каталогов отключен. Его можно включить с помощью <a href="https://docs.rs/volga/latest/volga/app/env/struct.HostEnv.html#method.with_files_listing" target="_blank" rel="noopener noreferrer"><code>with_files_listing()</code></a>, однако это не рекомендуется для продакшн-сред.</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token class-name">App</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">with_host_env</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>env<span class="token closure-punctuation punctuation">|</span></span> env</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">with_content_root</span><span class="token punctuation">(</span><span class="token string">&quot;/static&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">with_fallback_file</span><span class="token punctuation">(</span><span class="token string">&quot;404.html&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">with_files_listing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Включает маршрутизацию статических файлов</span></span>
<span class="line">    <span class="token comment">// и перенаправление на 404.html</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">use_static_files</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="хост-среда" tabindex="-1"><a class="header-anchor" href="#хост-среда"><span>Хост-среда</span></a></h2><p>Для более сложных сценариев можно использовать <a href="https://docs.rs/volga/latest/volga/app/env/struct.HostEnv.html" target="_blank" rel="noopener noreferrer"><code>HostEnv</code></a>, который представляет хост-среду приложения. Использование его напрямую упрощает управление и переключение между средами.</p><p>Вот как можно добиться той же конфигурации с помощью <code>HostEnv</code>:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">use</span> <span class="token namespace">volga<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">App</span><span class="token punctuation">,</span> <span class="token class-name">File</span><span class="token punctuation">,</span> <span class="token namespace">app<span class="token punctuation">::</span></span><span class="token class-name">HostEnv</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tokio::main]</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> env <span class="token operator">=</span> <span class="token class-name">HostEnv</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;/static&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">with_fallback_file</span><span class="token punctuation">(</span><span class="token string">&quot;404.html&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">with_files_listing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">let</span> <span class="token keyword">mut</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">set_host_env</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Включает маршрутизацию статических файлов</span></span>
<span class="line">    <span class="token comment">// и перенаправление на 404.html</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">use_static_files</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Загружает новые статические файлы</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">map_post</span><span class="token punctuation">(</span><span class="token string">&quot;/upload&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>file<span class="token punctuation">:</span> <span class="token class-name">File</span><span class="token punctuation">,</span> env<span class="token punctuation">:</span> <span class="token class-name">HostEnv</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> root <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token function">content_root</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        file<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Кроме того, <a href="https://docs.rs/volga/latest/volga/app/env/struct.HostEnv.html" target="_blank" rel="noopener noreferrer"><code>HostEnv</code></a> можно извлекать в middleware и обработчики запросов.</p><p>Полный пример можно найти в <a href="https://github.com/RomanEmreis/volga/blob/main/examples/static_files/src/main.rs" target="_blank" rel="noopener noreferrer">этом репозитории</a>.</p>`,32)]))}const i=s(e,[["render",c]]),u=JSON.parse('{"path":"/ru/advanced/static-files.html","title":"Статические файлы","lang":"ru-RU","frontmatter":{},"git":{"updatedTime":1753605804000,"contributors":[{"name":"RomanEmreis","username":"RomanEmreis","email":"39233213+RomanEmreis@users.noreply.github.com","commits":1,"url":"https://github.com/RomanEmreis"},{"name":"Roman Emreis","username":"","email":"Roman_Emreis@epam.com","commits":2}],"changelog":[{"hash":"446f2cb336c3db45ba44b4f07f646b570e054215","time":1753605804000,"email":"r.emreis@outlook.com","author":"Roman Emreis","message":"new release"},{"hash":"a867fa2aa5f2803668e59034c5e3f7dfbf34caca","time":1742551187000,"email":"Roman_Emreis@epam.com","author":"Roman Emreis","message":"new release"},{"hash":"7c086be3a38ed023582e6ce85f7b7ee41fb1f649","time":1739560954000,"email":"39233213+RomanEmreis@users.noreply.github.com","author":"Roman","message":"new release"}]},"filePathRelative":"ru/advanced/static-files.md"}');export{i as comp,u as data};
